// -------------------------------------------------------------
// HLSL
// 
// Copyright (c) 2002,2003 IMAGIRE Takashi. All rights reserved.
// -------------------------------------------------------------

// -------------------------------------------------------------
// グローバル変数
// -------------------------------------------------------------
float4x4 mWVP;        // ローカルから射影空間への座標変換

// -------------------------------------------------------------
// テクスチャ
// -------------------------------------------------------------
texture Tex;
sampler Samp = sampler_state
{
    Texture = <Tex>;
    MinFilter = LINEAR;
    MagFilter = LINEAR;
    MipFilter = NONE;

    AddressU = Clamp;
    AddressV = Clamp;
};

// -------------------------------------------------------------
// 頂点シェーダからピクセルシェーダに渡すデータ
// -------------------------------------------------------------
struct VS_OUTPUT
{
    float4 Pos        : POSITION;
    float2 Tex        : TEXCOORD0;
};

// -------------------------------------------------------------
// 頂点シェーダプログラム
// -------------------------------------------------------------
VS_OUTPUT VS (
      float4 Pos    : POSITION            // 頂点座標
    , float2 Tex    : TEXCOORD            // テクスチャ座標
){
    VS_OUTPUT Out = (VS_OUTPUT)0;        // 出力データ
    
    Out.Pos = mul( Pos, mWVP );            // 位置座標
    
    Out.Tex = Tex;                        // テクスチャ座標
    
    return Out;
}
// -------------------------------------------------------------
// ピクセルシェーダプログラム
// -------------------------------------------------------------
float4 PS ( VS_OUTPUT In ) : COLOR
{
    return tex2D( Samp, In.Tex ); // C++側で登録されたテキスチャーから指定UV座標の色を取得
}

// -------------------------------------------------------------
// テクニック
// -------------------------------------------------------------
technique TShader
{
    pass P0
    {
        // シェーダ
        VertexShader = compile vs_2_0 VS(); // vs_1_1 -> ps_2_0
        PixelShader  = compile ps_2_0 PS(); // ps_1_1 -> ps_2_0
    }
}
